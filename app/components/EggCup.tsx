/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 ./EggCup.glb --transform --keepnames --keepmeshes --types
*/

import { useGLTF } from "@react-three/drei";
import { RigidBody } from "@react-three/rapier";
import type { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    eggCup_1: THREE.Mesh;
    eggCup_1_1: THREE.Mesh;
  };
  materials: {
    PaletteMaterial001: THREE.MeshStandardMaterial;
  };
};

export function EggCup(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/EggCup-transformed.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <RigidBody type="fixed" colliders="trimesh">
        <group scale={4}>
          <mesh
            name="eggCup_1"
            geometry={nodes.eggCup_1.geometry}
            material={materials.PaletteMaterial001}
          />
          <mesh
            name="eggCup_1_1"
            geometry={nodes.eggCup_1_1.geometry}
            material={materials.PaletteMaterial001}
          />
        </group>
      </RigidBody>
    </group>
  );
}

useGLTF.preload("/EggCup-transformed.glb");
