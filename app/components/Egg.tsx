/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 ./Egg.glb --transform --keepnames --keepmeshes --types --simplify
*/

import { Text, useGLTF } from "@react-three/drei";
import { BallCollider, RigidBody } from "@react-three/rapier";
import type { GLTF } from "three-stdlib";
import type { BallContent } from "~/types";
import { renderValue } from "~/utils";

type GLTFResult = GLTF & {
  nodes: {
    group35554845: THREE.Mesh;
  };
  materials: {
    mat21: THREE.MeshStandardMaterial;
  };
};

type Props = JSX.IntrinsicElements["group"] & {
  content: BallContent;
};

export function Egg({ content, ...props }: Props) {
  const { nodes, materials } = useGLTF("/Egg-transformed.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <RigidBody type="dynamic" colliders={false}>
        <BallCollider args={[0.3]} />
        <group scale={1.5}>
          <mesh
            name="group35554845"
            geometry={nodes.group35554845.geometry}
            material={materials.mat21}
            material-transparent={true}
            material-opacity={0.8}
          />
          <Text
            color="black"
            anchorX="center"
            anchorY="middle"
            position={[0, 0, 0]}
            fontSize={0.25}
          >
            {renderValue(content)}
          </Text>
        </group>
      </RigidBody>
    </group>
  );
}

useGLTF.preload("/Egg-transformed.glb");
